# Usage
printf "%s\n" \
"path_to_fastq1" \
"path_to_fastq2" \
...
"path_to_fastqN"
| rearr_barcode_run.sh "bowtie2_index" "genome_fasta"

# Example
printf "%s\n" \
"barcode/test1/D2-g1n-1.fq" \
| rearr_barcode_run.sh "/home/ljw/hg19_with_bowtie2_index/hg19" "/home/ljw/hg19_with_bowtie2_index/hg19.fa"

# Output
# fastq.count: the count of duplicates in the input file
# fastq.not_find: non-duplicate reads cannot find barcode
# fastq.alg: alignments of non-duplicate reads with barcode
# fastq.table: informative table of alignments of non-duplicate reads with barcode

# Index barcode
rearr_index_barcode.sh "bowtie2_index" "genome_fasta": this step is necessary for using bowtie2 local mode to demultiplex reads by barcodes

# Tools
# Get a long table of indel
rearr_barcode_post_process.sh <fastq.table
# To hist a certain column
rearr_barcode_post_process.sh <fastq.table column
# Count percentage of -4
trouble_shooting.r path_to_fastq
# call kpLogo
run_kpLogo.sh path_to_fastq