services:
  rabbitmq:
    restart: always
    container_name: celery_rabbitmq
    image: rabbitmq:latest
    # comment port when deploy
    # ports:
    #   - "5672:5672"
  
  redis:
    restart: always
    container_name: celery_redis
    image: redis:latest
    # comment port when deploy
    # ports:
    #   - "6379:6379"

  beat:
    depends_on:
      - rabbitmq
      - redis
    restart: always
    container_name: celery_beat
    image: ljwdocker1989/celery_flower
    build:
      context: .
      dockerfile: celery_flower.df
    command: celery -A celery_project.app -b amqp://rabbitmq:5672 --result-backend redis://redis:6379/0 beat

  worker:
    depends_on:
      - rabbitmq
      - redis
    restart: always
    container_name: celery_worker
    image: ljwdocker1989/celery_worker
    build:
      context: .
      dockerfile: celery_worker.df
    volumes:
      - "./flask_project/tmp:/app/tmp"
      - "./genome:/app/genome:ro"
    command: celery -A celery_project.app -b amqp://rabbitmq:5672 --result-backend redis://redis:6379/0 worker

  flask:
    depends_on:
      - rabbitmq
      - redis
      - worker
    restart: always
    container_name: flask_app
    image: ljwdocker1989/flask_app
    build:
      context: .
      dockerfile: flask.df
    volumes:
      - "./flask_project/tmp:/app/tmp"
    environment:
      CELERY_BROKER: amqp://rabbitmq:5672
      CELERY_BACKEND: redis://redis:6379/0
      CELERY_FLOWER: http://flower:5555
      SHINY_SERVER: http://shiny:3838
    command: waitress-serve app:flaskApp

  flower:
    depends_on:
      - rabbitmq
      - redis
      - worker
    restart: always
    container_name: celery_flower
    image: ljwdocker1989/celery_flower
    build:
      context: .
      dockerfile: celery_flower.df
    command: celery -A celery_project.app -b amqp://rabbitmq:5672 --result-backend redis://redis:6379/0 flower

  nginx:
    depends_on:
      - flask
      - flower
      - shiny
    restart: always
    container_name: flask_nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/conf/:/etc/nginx/conf.d/:ro"
      - "./nginx/html/:/usr/share/nginx/html/:ro"
      # - "./openssl/:/etc/ssl/:ro"
      - "./certbot/letsencrypt/:/etc/letsencrypt/:ro"

  shiny:
    restart: always
    container_name: shiny_server
    image: ljwdocker1989/shiny_server
    build:
      context: .
      dockerfile: ./shiny_server.df
    volumes:
      - "./shinyApps/:/srv/shiny-server/:rw"
